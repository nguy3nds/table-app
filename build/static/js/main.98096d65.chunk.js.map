{"version":3,"sources":["components/table.module.css","components/PaginateComponent.tsx","components/SelectionBox.tsx","components/TableData.tsx","components/UserInOnePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","PaginateComponent","pageNumber","currentPage","onSelectPage","handlePrev","handleNext","items","number","push","Pagination","Item","active","onClick","Prev","Next","SelectionBox","props","Form","Group","Control","as","onChange","handleSelection","value","TableData","content","Table","UserInOnePage","formatDate","date","d","Date","getDate","toString","length","getMonth","getFullYear","users","map","user","id","firstName","lastName","email","gender","birthday","salary","phone","replace","Row","Col","App","useState","setUsers","Data","data","setData","setCurrentPage","useEffect","indexLastUser","indexFirstUser","currentUsers","slice","className","Container","styles","tableModify","md","e","keyObj","target","sortedUsers","sort","a","b","type","placeholder","searchUsers","filter","prop","toLowerCase","includes","Math","ceil","pageNum","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98096d65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableModify\":\"table_tableModify__wzply\",\"gradient\":\"table_gradient__1KhnF\"};","import { Pagination } from \"react-bootstrap\";\r\n\r\nfunction PaginateComponent({\r\n  pageNumber,\r\n  currentPage,\r\n  onSelectPage,\r\n  handlePrev,\r\n  handleNext,\r\n}: any) {\r\n  let items = [];\r\n  for (let number = 1; number <= pageNumber; number++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        active={number === currentPage}\r\n        onClick={() => onSelectPage(number)}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <Pagination>\r\n        {currentPage !== 1 && <Pagination.Prev onClick={handlePrev} />}\r\n        {items}\r\n        {currentPage !== pageNumber && <Pagination.Next onClick={handleNext} />}\r\n      </Pagination>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaginateComponent;\r\n","import Form from \"react-bootstrap/Form\";\r\nimport React, { ChangeEvent, ReactElement } from \"react\";\r\n\r\n// // Type '{ handleSelection: (e: ChangeEvent<HTMLInputElement>) => void; }' is not assignable to type 'IntrinsicAttributes & Event & { children?: ReactNode; }'.\r\n//   Property 'handleSelection' does not exist on type 'IntrinsicAttributes & Event & { children?: ReactNode; }'.\r\n\r\nconst SelectionBox = (props: {\r\n  handleSelection: (e: ChangeEvent<HTMLInputElement>) => void;\r\n}): ReactElement => {\r\n  // chuyen len interface\r\n  return (\r\n    <Form>\r\n      <Form.Group>\r\n        <Form.Control as=\"select\" onChange={props.handleSelection}>\r\n          <option>Select field to sort</option>\r\n          <option value={\"id\"}>Id</option>\r\n          <option value={\"firstName\"}>First Name</option>\r\n          <option value={\"lastName\"}>Last Name</option>\r\n          <option value={\"email\"}>Email</option>\r\n          <option value={\"gender\"}>Gender</option>\r\n          <option value={\"birthday\"}>Birthday</option>\r\n          <option value={\"salary\"}>Salary</option>\r\n          <option value={\"phone\"}>Phone</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SelectionBox;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst TableData: React.FC<any> = ({ content }) => {\r\n  return (\r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Email</th>\r\n          <th>Gender</th>\r\n          <th>Birthday</th>\r\n          <th>Salary</th>\r\n          <th>Phone</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{content}</tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default TableData;\r\n","import React from \"react\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport { User } from \"../App\"; // tao file rieng\nimport TableData from \"./TableData\";\n\nconst UserInOnePage = (props: any) => {\n  const formatDate = (date: string): string => {\n    let d = new Date(date);\n    let day =\n      d.getDate().toString().length === 2\n        ? d.getDate().toString()\n        : \"0\" + d.getDate().toString();\n    let month =\n      d.getMonth().toString().length === 2\n        ? d.getMonth().toString()\n        : \"0\" + d.getMonth().toString();\n    return day + \"/\" + month + \"/\" + d.getFullYear().toString();\n  };\n\n  const content = props.users.map((user: User) => (\n    <tr key={user.id}>\n      <td>{user.id}</td>\n      <td>{user.firstName}</td>\n      <td>{user.lastName}</td>\n      <td>{user.email}</td>\n      <td>{user.gender}</td>\n      <td>{formatDate(user.birthday)}</td>\n      <td>{user.salary}</td>\n      <td>{\"(+84)\" + user.phone.replace(/-/g, \"\")}</td>\n    </tr>\n  ));\n\n  return (\n    <div>\n      {props.users.length !== 0 && (\n        <Row>\n          <Col>\n            <TableData content={content} />\n          </Col>\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default UserInOnePage;\n","import \"./App.css\";\r\nimport Data from \"./users.json\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { ChangeEvent, useEffect, useState } from \"react\";\r\nimport PaginateComponent from \"./components/PaginateComponent\";\r\nimport SelectionBox from \"./components/SelectionBox\";\r\nimport UserInOnePage from \"./components/UserInOnePage\";\r\nimport styles from \"./components/table.module.css\";\r\n\r\nexport interface User {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  gender: string;\r\n  birthday: string;\r\n  salary: number;\r\n  phone: string;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [data, setData] = useState<User[]>(Data);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n\r\n  const USER_PER_PAGE = 10;\r\n\r\n  useEffect(() => {\r\n    const indexLastUser = currentPage * USER_PER_PAGE;\r\n    const indexFirstUser = indexLastUser - USER_PER_PAGE;\r\n    const currentUsers = data.slice(indexFirstUser, indexLastUser);\r\n\r\n    setUsers(currentUsers);\r\n  }, [currentPage, data]);\r\n\r\n  const onSort = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let keyObj: keyof User = e.target.value as keyof User;\r\n    let sortedUsers = users.sort((a: User, b: User) => {\r\n      if (a[keyObj] < b[keyObj]) return -1;\r\n      if (a[keyObj] > b[keyObj]) return 1;\r\n      return 0;\r\n    });\r\n    setUsers([...sortedUsers]);\r\n  };\r\n\r\n  const onSelectedPage = (pageNum: number) => {\r\n    setCurrentPage(pageNum);\r\n  };\r\n\r\n  const onPrev = () => {\r\n    setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  const onNext = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const onSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let searchUsers = Data.filter((user: User) => {\r\n      for (let prop in user) {\r\n        if (\r\n          user[prop as keyof User]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(e.target.value.toLowerCase())\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n    setData(searchUsers);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container className={styles.tableModify}>\r\n        <h1 className=\"text-center p-3\">Table app</h1>\r\n        <Table>\r\n          <Row className=\"my-2\">\r\n            <Col md=\"4\">\r\n              <SelectionBox handleSelection={onSort} />\r\n            </Col>\r\n            <Col>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                onChange={onSearch}\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <UserInOnePage users={users} />\r\n\r\n          {data.length !== 0 && (\r\n            <Row className=\"justify-content-center\">\r\n              <PaginateComponent\r\n                pageNumber={Math.ceil(data.length / USER_PER_PAGE)}\r\n                currentPage={currentPage}\r\n                onSelectPage={onSelectedPage}\r\n                handlePrev={onPrev}\r\n                handleNext={onNext}\r\n              />\r\n            </Row>\r\n          )}\r\n\r\n          {data.length === 0 && (\r\n            <Row className=\"justify-content-center\">\r\n              <p>Couldn't find anything for these key words</p>\r\n            </Row>\r\n          )}\r\n        </Table>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}